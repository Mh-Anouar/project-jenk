---
name: static-website
'on':
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: "0 2 * * *"
env:
  ID_DOCKER: "choco1992"
  IMAGE_NAME: "staticwebsite"
  IMAGE_TAG: "latest"
  APP_CONTAINER_PORT: "80"
  APP_EXPOSED_PORT: "80"


defaults:
  run:
    working-directory: 'workdir-staticwebsite'

jobs:
  build:
    name: BUILD DOCKER IMAGE
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2
        with:
          path: 'workdir-staticwebsite'
      - name: Build Image
        run: docker build -t ${ID_DOCKER}/$IMAGE_NAME:$IMAGE_TAG .

  run-and-test:
    name: RUN AND TEST CONTAINER
    runs-on: ubuntu-latest
    steps:    
      - name: Run container based on builded image
        run: |
          docker run --name $IMAGE_NAME -d -p ${APP_EXPOSED_PORT}:${APP_CONTAINER_PORT} -e PORT=$APP_CONTAINER_PORT ${ID_DOCKER}/$IMAGE_NAME:$IMAGE_TAG
          sleep 5

      - name: Test image.
        run: curl http://172.17.0.1:${APP_EXPOSED_PORT} | grep -i "Dimension"

  clean:
    name: CLEAN TEST CONTAINER
    runs-on: ubuntu-latest
    steps:    
      - name: Clean Container
        run: |
          docker stop $IMAGE_NAME
          docker rm $IMAGE_NAME

  push:
    name: PUSH IMAGE ON DOCKERHUB
    runs-on: ubuntu-latest
    steps:    
      - name: Login and Push Image on docker hub
        run: |
          echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u $ID_DOCKER --password-stdin
          docker push ${ID_DOCKER}/$IMAGE_NAME:$IMAGE_TAG
        
  deploy:
    name: DEPLOY APPLICATION
    runs-on: ubuntu-latest
    steps:            
      - name: Install and configure Heroku CLI
        run: | 
          sudo apt install nodejs
          echo "STAGING=${ID_DOCKER}-staging" >> $GITHUB_ENV
          echo "PRODUCTION=${ID_DOCKER}-production" >> $GITHUB_ENV
      
      - name: Deploy Staging
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: | 
          heroku container:login
          heroku create ${STAGING}  || echo "project already exist"
          heroku container:push -a ${STAGING} web
          heroku container:release -a ${STAGING} web    
      
      - name: Deploy PRODUCTION
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: | 
          heroku container:login
          heroku create ${PRODUCTION}  || echo "project already exist"
          heroku container:push -a ${PRODUCTION} web
          heroku container:release -a ${PRODUCTION} web    